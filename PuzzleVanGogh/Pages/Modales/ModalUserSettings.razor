@inject IJSRuntime JSRuntime
@inject IToastService toastService
@inject NavigationManager navigationManager

<div class="text-end mb-2">
    <svg @onclick="Close" width="35px" height="35px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path opacity="0.5" d="M12 22C7.28595 22 4.92893 22 3.46447 20.5355C2 19.0711 2 16.714 2 12C2 7.28595 2 4.92893 3.46447 3.46447C4.92893 2 7.28595 2 12 2C16.714 2 19.0711 2 20.5355 3.46447C22 4.92893 22 7.28595 22 12C22 16.714 22 19.0711 20.5355 20.5355C19.0711 22 16.714 22 12 22Z" fill="#ff0000"></path> <path d="M8.96967 8.96967C9.26256 8.67678 9.73744 8.67678 10.0303 8.96967L12 10.9394L13.9697 8.96969C14.2626 8.6768 14.7374 8.6768 15.0303 8.96969C15.3232 9.26258 15.3232 9.73746 15.0303 10.0303L13.0607 12L15.0303 13.9697C15.3232 14.2625 15.3232 14.7374 15.0303 15.0303C14.7374 15.3232 14.2625 15.3232 13.9696 15.0303L12 13.0607L10.0304 15.0303C9.73746 15.3232 9.26258 15.3232 8.96969 15.0303C8.6768 14.7374 8.6768 14.2626 8.96969 13.9697L10.9394 12L8.96967 10.0303C8.67678 9.73744 8.67678 9.26256 8.96967 8.96967Z" fill="#ff0000"></path> </g></svg>
</div>

<h4 class="mb-2">@usersText</h4>

<div class="mb-5">
    <div class="dropdown-center">
        <button class="form-select" type="button" data-bs-toggle="dropdown" aria-expanded="false">@selectText</button>
        <ul class="dropdown-menu">
            <li>
                @foreach (var user in users)
                {
                    <div class="dropdown-item">
                        <div class="row">
                            <div class="col">
                                <label class="dropdown-item">@user.Username</label>
                            </div>
                            <div class="col text-end">
                                <svg @onclick="() => ChangeUser(user)" width="25px" height="25px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path opacity="0.5" d="M12 22C7.28595 22 4.92893 22 3.46447 20.5355C2 19.0711 2 16.714 2 12C2 7.28595 2 4.92893 3.46447 3.46447C4.92893 2 7.28595 2 12 2C16.714 2 19.0711 2 20.5355 3.46447C22 4.92893 22 7.28595 22 12C22 16.714 22 19.0711 20.5355 20.5355C19.0711 22 16.714 22 12 22Z" fill="#1445e6"></path> <path d="M16.0303 8.96967C16.3232 9.26256 16.3232 9.73744 16.0303 10.0303L11.0303 15.0303C10.7374 15.3232 10.2626 15.3232 9.96967 15.0303L7.96967 13.0303C7.67678 12.7374 7.67678 12.2626 7.96967 11.9697C8.26256 11.6768 8.73744 11.6768 9.03033 11.9697L10.5 13.4393L14.9697 8.96967C15.2626 8.67678 15.7374 8.67678 16.0303 8.96967Z" fill="#1445e6"></path> </g></svg>
                                <svg @onclick="() => DeleteUser(user)" width="25px" height="25px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M3 6.38597C3 5.90152 3.34538 5.50879 3.77143 5.50879L6.43567 5.50832C6.96502 5.49306 7.43202 5.11033 7.61214 4.54412C7.61688 4.52923 7.62232 4.51087 7.64185 4.44424L7.75665 4.05256C7.8269 3.81241 7.8881 3.60318 7.97375 3.41617C8.31209 2.67736 8.93808 2.16432 9.66147 2.03297C9.84457 1.99972 10.0385 1.99986 10.2611 2.00002H13.7391C13.9617 1.99986 14.1556 1.99972 14.3387 2.03297C15.0621 2.16432 15.6881 2.67736 16.0264 3.41617C16.1121 3.60318 16.1733 3.81241 16.2435 4.05256L16.3583 4.44424C16.3778 4.51087 16.3833 4.52923 16.388 4.54412C16.5682 5.11033 17.1278 5.49353 17.6571 5.50879H20.2286C20.6546 5.50879 21 5.90152 21 6.38597C21 6.87043 20.6546 7.26316 20.2286 7.26316H3.77143C3.34538 7.26316 3 6.87043 3 6.38597Z" fill="#ff0000"></path> <path fill-rule="evenodd" clip-rule="evenodd" d="M9.42543 11.4815C9.83759 11.4381 10.2051 11.7547 10.2463 12.1885L10.7463 17.4517C10.7875 17.8855 10.4868 18.2724 10.0747 18.3158C9.66253 18.3592 9.29499 18.0426 9.25378 17.6088L8.75378 12.3456C8.71256 11.9118 9.01327 11.5249 9.42543 11.4815Z" fill="#ff0000"></path> <path fill-rule="evenodd" clip-rule="evenodd" d="M14.5747 11.4815C14.9868 11.5249 15.2875 11.9118 15.2463 12.3456L14.7463 17.6088C14.7051 18.0426 14.3376 18.3592 13.9254 18.3158C13.5133 18.2724 13.2126 17.8855 13.2538 17.4517L13.7538 12.1885C13.795 11.7547 14.1625 11.4381 14.5747 11.4815Z" fill="#ff0000"></path> <path opacity="0.5" d="M11.5956 22.0001H12.4044C15.1871 22.0001 16.5785 22.0001 17.4831 21.1142C18.3878 20.2283 18.4803 18.7751 18.6654 15.8686L18.9321 11.6807C19.0326 10.1037 19.0828 9.31524 18.6289 8.81558C18.1751 8.31592 17.4087 8.31592 15.876 8.31592H8.12405C6.59127 8.31592 5.82488 8.31592 5.37105 8.81558C4.91722 9.31524 4.96744 10.1037 5.06788 11.6807L5.33459 15.8686C5.5197 18.7751 5.61225 20.2283 6.51689 21.1142C7.42153 22.0001 8.81289 22.0001 11.5956 22.0001Z" fill="#ff0000"></path> </g></svg>
                            </div>
                        </div>
                    </div>
                }
            </li>
        </ul>
    </div>
</div>

<hr class="mb-5" />

<h4 class="mb-2">@newUser</h4>

<div class="mb-5">
    <div class="row">
        <div class="col-9">
            <input class="@colorName" type="text" @bind="inputUsername" />
        </div>
        <div class="col-3 text-end">
            <svg @onclick="AddUser" width="35px" height="35px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path opacity="0.5" d="M12 22C7.28595 22 4.92893 22 3.46447 20.5355C2 19.0711 2 16.714 2 12C2 7.28595 2 4.92893 3.46447 3.46447C4.92893 2 7.28595 2 12 2C16.714 2 19.0711 2 20.5355 3.46447C22 4.92893 22 7.28595 22 12C22 16.714 22 19.0711 20.5355 20.5355C19.0711 22 16.714 22 12 22Z" fill="#1848e7"></path> <path d="M12 8.25C12.4142 8.25 12.75 8.58579 12.75 9V11.25H15C15.4142 11.25 15.75 11.5858 15.75 12C15.75 12.4142 15.4142 12.75 15 12.75H12.75L12.75 15C12.75 15.4142 12.4142 15.75 12 15.75C11.5858 15.75 11.25 15.4142 11.25 15V12.75H9C8.58579 12.75 8.25 12.4142 8.25 12C8.25 11.5858 8.58579 11.25 9 11.25H11.25L11.25 9C11.25 8.58579 11.5858 8.25 12 8.25Z" fill="#1848e7"></path> </g></svg>
        </div>
    </div>
</div>

<hr class="mb-5" />

<h4 class="mb-2">@languageText</h4>

<div>
    <button class="btn btn-primary btn-sm" @onclick="LanguageEN">EN</button>
    <button class="btn btn-dark btn-sm" @onclick="LanguageES">ES</button>
</div>

@code {
    string usersText; string selectText; string newUser; string languageText; string toast1; string toast2; string language;
    [CascadingParameter] BlazoredModalInstance modalInstance { get; set; } = default!;
    [CascadingParameter] IModalService Modal { get; set; } = default!;
    private UserController uc = new UserController();
    private LanguageController lc = new LanguageController();
    private List<DB.Models.Users> users;
    private string inputUsername = "";
    string colorName = "form-control";

    protected override async Task OnInitializedAsync()
    {
        users = uc.GetUsers();
        await GetLanguage();
        lc.LanguageUserSettings(language, ref usersText, ref selectText, ref newUser, ref languageText, ref toast1, ref toast2);
    }

    private void AddUser()
    {
        //Validar que el usuario no sea en blanco
        if (inputUsername.Length == 0 || string.IsNullOrWhiteSpace(inputUsername))
        {
            toastService.ShowError(toast1, null);
            colorName = "form-control border-danger";
            inputUsername = "";
        }
        //Validar que el usuario no exista
        else if (uc.UserExist(inputUsername))
        {
            toastService.ShowError(toast2, null);
            colorName = "form-control border-danger";
        }
        //Si no esta en blanco y el nombre no esta en la base de datos guardamos el usuario
        else
        {
            var newUser = new DB.Models.Users { Username = inputUsername };
            uc.CreateUser(newUser);
            users = uc.GetUsers();
            colorName = "form-control";
            inputUsername = "";
        }
    }

    private async Task DeleteUser(DB.Models.Users _user)
    {
        var parameters1 = new ModalParameters().Add(nameof(Modales.MoodalDeleteUser._user), _user);
        var deleteUser = Modal.Show<MoodalDeleteUser>("", parameters1);
        var result = await deleteUser.Result;

        if (result.Confirmed)
        {
            users = uc.GetUsers();
        }
    }

    private async Task ChangeUser(DB.Models.Users _user)
    {
        var parameters1 = new ModalParameters().Add(nameof(Modales.ModalChangeUser._user), _user);
        var changeUser = Modal.Show<ModalChangeUser>("", parameters1);
        var result = await changeUser.Result;

        if (result.Confirmed)
        {
            Close();
        }
    }

    private async Task Close() => await modalInstance.CloseAsync();

    private void LanguageES()
    {
        lc.LanguageUserSettings("es", ref usersText, ref selectText, ref newUser, ref languageText, ref toast1, ref toast2);
        SetLanguageES();
    }

    private void LanguageEN()
    {
        lc.LanguageUserSettings("en", ref usersText, ref selectText, ref newUser, ref languageText, ref toast1, ref toast2);
        SetLanguageEN();
    }

    private async Task SetLanguageEN()
    {
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", "language", "en");
    }

    private async Task SetLanguageES()
    {
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", "language", "es");
    }

    private async Task GetLanguage()
    {
        language = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "language");
    }
}